# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: nodejs-serverless

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
variables:
  mongo: XAXAXA
provider:
  name: aws
  runtime: nodejs4.3
  stage: dev
  region: eu-west-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can add packaging information here

package:
  artifact: nodejs-serverless.zip

functions:
    createUser: 
        handler: createUser.main
        memorySize: 128
        events: 
          - http:
              path: user
              method: post
              cors:
                origins:
                  - '*'
    functionUpdateUser:
        handler: updateUser.main
        memorySize: 128
        events: 
          - http:
              path: user
              method: delete
              cors:
                origins:
                  - '*'
    getUsers:
        handler: getUsers.main
        memorySize: 128
        events: 
          - http:
              path: users
              method: get
              cors:
                origins:
                  - '*'
    deleteUser:
        handler: deleteUser.main
        memorySize: 128
        events: 
         - http:
              path: user
              method: delete
              cors:
                origins:
                  - '*'

# you can add CloudFormation resource templates here
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
